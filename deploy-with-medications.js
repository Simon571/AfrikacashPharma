#!/usr/bin/env node

/**
 * Script de d√©ploiement Vercel avec migration de la base de donn√©es
 * Ce script s'assure que les 500 m√©dicaments sont import√©s sur Vercel
 */

const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ D√©ploiement Vercel avec les 500 m√©dicaments...\n');

async function deployToVercel() {
  try {
    // 1. V√©rifier que le fichier CSV existe
    if (!fs.existsSync('./Liste_de_500_M_dicaments.csv')) {
      throw new Error('Le fichier Liste_de_500_M_dicaments.csv est introuvable');
    }
    console.log('‚úÖ Fichier CSV des m√©dicaments trouv√©');

    // 2. V√©rifier que le script de seed existe
    if (!fs.existsSync('./prisma/seed-medications.js')) {
      throw new Error('Le script de seed des m√©dicaments est introuvable');
    }
    console.log('‚úÖ Script de seed des m√©dicaments trouv√©');

    // 3. Construire le projet
    console.log('\nüì¶ Construction du projet...');
    execSync('npm run build', { stdio: 'inherit' });
    console.log('‚úÖ Projet construit avec succ√®s');

    // 4. D√©ployer sur Vercel
    console.log('\n‚òÅÔ∏è  D√©ploiement sur Vercel...');
    execSync('vercel --prod', { stdio: 'inherit' });
    console.log('‚úÖ D√©ploiement Vercel termin√©');

    // 5. Migrer la base de donn√©es de production
    console.log('\nüóÑÔ∏è  Migration de la base de donn√©es de production...');
    execSync('npx prisma db push --force-reset', { 
      stdio: 'inherit',
      env: { ...process.env, NODE_ENV: 'production' }
    });
    console.log('‚úÖ Migration de la base de donn√©es termin√©e');

    // 6. Importer les m√©dicaments en production
    console.log('\nüíä Importation des 500 m√©dicaments en production...');
    execSync('node prisma/seed-medications.js', { 
      stdio: 'inherit',
      env: { ...process.env, NODE_ENV: 'production' }
    });
    console.log('‚úÖ 500 m√©dicaments import√©s en production');

    console.log('\nüéâ D√©ploiement complet r√©ussi !');
    console.log('üìã R√©sum√©:');
    console.log('  - Projet d√©ploy√© sur Vercel');
    console.log('  - Base de donn√©es migr√©e');
    console.log('  - 500 m√©dicaments import√©s');
    console.log('  - API /api/medications disponible');
    
  } catch (error) {
    console.error('\n‚ùå Erreur pendant le d√©ploiement:', error.message);
    console.log('\nüîß Actions √† effectuer manuellement:');
    console.log('  1. V√©rifier la configuration de la base de donn√©es');
    console.log('  2. Ex√©cuter: npm run build');
    console.log('  3. Ex√©cuter: vercel --prod');
    console.log('  4. Ex√©cuter: npx prisma db push');
    console.log('  5. Ex√©cuter: node prisma/seed-medications.js');
    process.exit(1);
  }
}

// Afficher les informations sur l'utilisation
console.log('üìñ Informations sur les m√©dicaments:');
console.log('  - 500 m√©dicaments avec noms, prix, stocks, dates d\'expiration');
console.log('  - 7 formes pharmaceutiques: Comprim√©, Sirop, G√©lule, etc.');
console.log('  - API compl√®te pour recherche et gestion');
console.log('  - Endpoints disponibles:');
console.log('    ‚Ä¢ GET /api/medications - Liste tous les m√©dicaments');
console.log('    ‚Ä¢ GET /api/medications?search=terme - Recherche');
console.log('    ‚Ä¢ GET /api/medications?inStock=true - M√©dicaments en stock');
console.log('    ‚Ä¢ POST /api/medications - Ajouter un m√©dicament');
console.log('');

deployToVercel();