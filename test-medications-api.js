const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testMedicationsAPI() {
  try {
    console.log('üß™ Test de l\'API des m√©dicaments...\n');

    // Test 1: Compter le nombre total de m√©dicaments
    const totalMedications = await prisma.medication.count();
    console.log(`‚úÖ Nombre total de m√©dicaments: ${totalMedications}`);

    // Test 2: R√©cup√©rer les 10 premiers m√©dicaments
    const firstTenMedications = await prisma.medication.findMany({
      take: 10,
      orderBy: { name: 'asc' },
      select: {
        id: true,
        name: true,
        pharmaceuticalForm: true,
        price: true,
        purchasePrice: true,
        quantity: true,
        expirationDate: true,
        isAvailableForSale: true
      }
    });

    console.log('\nüìã Les 10 premiers m√©dicaments:');
    firstTenMedications.forEach((med, index) => {
      console.log(`${index + 1}. ${med.name} (${med.pharmaceuticalForm}) - Prix: ${med.price} CDF - Stock: ${med.quantity}`);
    });

    // Test 3: Recherche par terme
    const searchResults = await prisma.medication.findMany({
      where: {
        name: {
          contains: 'Parac√©tamol'
        }
      },
      take: 5,
      select: {
        name: true,
        pharmaceuticalForm: true,
        price: true,
        quantity: true
      }
    });

    console.log('\nüîç R√©sultats de recherche pour "Parac√©tamol":');
    searchResults.forEach((med, index) => {
      console.log(`${index + 1}. ${med.name} (${med.pharmaceuticalForm}) - Prix: ${med.price} CDF - Stock: ${med.quantity}`);
    });

    // Test 4: M√©dicaments en stock
    const inStockCount = await prisma.medication.count({
      where: {
        quantity: { gt: 0 },
        isAvailableForSale: true
      }
    });

    console.log(`\nüì¶ M√©dicaments en stock: ${inStockCount}`);

    // Test 5: M√©dicaments par forme pharmaceutique
    const formDistribution = await prisma.medication.groupBy({
      by: ['pharmaceuticalForm'],
      _count: {
        pharmaceuticalForm: true
      }
    });

    console.log('\nüíä Distribution par forme pharmaceutique:');
    formDistribution.forEach(form => {
      console.log(`- ${form.pharmaceuticalForm}: ${form._count.pharmaceuticalForm} m√©dicaments`);
    });

    console.log('\n‚úÖ Tous les tests ont r√©ussi ! L\'API des m√©dicaments est pr√™te.');

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testMedicationsAPI();