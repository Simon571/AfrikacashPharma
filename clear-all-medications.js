const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function clearAllMedications() {
  try {
    console.log('üóëÔ∏è  Suppression compl√®te de tous les m√©dicaments...\n');

    // Compter le nombre total de m√©dicaments avant suppression
    const totalMedications = await prisma.medication.count();
    console.log(`üìä Nombre total de m√©dicaments √† supprimer: ${totalMedications}`);

    if (totalMedications === 0) {
      console.log('‚ùå Aucun m√©dicament trouv√© dans la base de donn√©es.');
      return;
    }

    // Afficher un √©chantillon avant suppression
    const sampleMedications = await prisma.medication.findMany({
      take: 5,
      select: {
        name: true,
        pharmaceuticalForm: true,
        quantity: true
      },
      orderBy: { name: 'asc' }
    });

    console.log('üìã √âchantillon des m√©dicaments √† supprimer:');
    sampleMedications.forEach((med, index) => {
      console.log(`${index + 1}. ${med.name} (${med.pharmaceuticalForm}) - Stock: ${med.quantity}`);
    });
    console.log('');

    // Supprimer tous les m√©dicaments
    const result = await prisma.medication.deleteMany({});

    console.log(`‚úÖ ${result.count} m√©dicaments ont √©t√© supprim√©s avec succ√®s!`);
    console.log('üéØ La base de donn√©es des m√©dicaments est maintenant compl√®tement vide.');
    console.log('‚ú® Vous pouvez maintenant ajouter de nouveaux m√©dicaments via l\'interface ou l\'import!');

  } catch (error) {
    console.error('‚ùå Erreur lors de la suppression:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Demander confirmation avant de proc√©der
console.log('‚ö†Ô∏è  ATTENTION: Cette action va SUPPRIMER TOUS les m√©dicaments de la base de donn√©es!');
console.log('   - Tous les m√©dicaments seront d√©finitivement supprim√©s');
console.log('   - Cette action est IRR√âVERSIBLE');
console.log('   - La liste des m√©dicaments sera compl√®tement vide');
console.log('');

const readline = require('readline');
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question('√ätes-vous s√ªr de vouloir SUPPRIMER TOUS les m√©dicaments? (tapez "SUPPRIMER" pour confirmer): ', (answer) => {
  if (answer.toUpperCase() === 'SUPPRIMER') {
    clearAllMedications();
  } else {
    console.log('‚ùå Op√©ration annul√©e.');
  }
  rl.close();
});