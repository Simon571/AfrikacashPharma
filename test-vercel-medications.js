#!/usr/bin/env node

/**
 * Test des 500 m√©dicaments sur Vercel Production
 */

const https = require('https');

// URL de production Vercel
const VERCEL_URL = 'https://pajo-pharma-fzjzl8flw-nzamba-simons-projects.vercel.app';

console.log('üß™ Test des 500 m√©dicaments sur Vercel Production...\n');

function makeRequest(path) {
  return new Promise((resolve, reject) => {
    const url = VERCEL_URL + path;
    console.log(`üì° Test: ${url}`);
    
    https.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          resolve({ status: res.statusCode, data: jsonData });
        } catch (e) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

async function testVercelMedications() {
  try {
    // Test 1: Health check
    console.log('1Ô∏è‚É£ Test de sant√© de l\'API...');
    const healthCheck = await makeRequest('/api/health');
    console.log(`   Status: ${healthCheck.status}`);
    console.log(`   Response: ${JSON.stringify(healthCheck.data).substring(0, 100)}...`);
    
    // Test 2: Tous les m√©dicaments
    console.log('\n2Ô∏è‚É£ Test de r√©cup√©ration de tous les m√©dicaments...');
    const allMedications = await makeRequest('/api/medications');
    console.log(`   Status: ${allMedications.status}`);
    if (allMedications.data && Array.isArray(allMedications.data)) {
      console.log(`   ‚úÖ ${allMedications.data.length} m√©dicaments trouv√©s`);
      console.log(`   Premier m√©dicament: ${allMedications.data[0]?.name || 'N/A'}`);
    }
    
    // Test 3: Recherche de Parac√©tamol
    console.log('\n3Ô∏è‚É£ Test de recherche "Parac√©tamol"...');
    const searchResults = await makeRequest('/api/medications?search=Parac√©tamol');
    console.log(`   Status: ${searchResults.status}`);
    if (searchResults.data && Array.isArray(searchResults.data)) {
      console.log(`   ‚úÖ ${searchResults.data.length} r√©sultats pour "Parac√©tamol"`);
      searchResults.data.slice(0, 3).forEach((med, index) => {
        console.log(`   ${index + 1}. ${med.name} - ${med.price} CDF - Stock: ${med.quantity}`);
      });
    }
    
    // Test 4: M√©dicaments en stock
    console.log('\n4Ô∏è‚É£ Test des m√©dicaments en stock...');
    const inStock = await makeRequest('/api/medications?inStock=true');
    console.log(`   Status: ${inStock.status}`);
    if (inStock.data && Array.isArray(inStock.data)) {
      console.log(`   ‚úÖ ${inStock.data.length} m√©dicaments en stock`);
    }

    console.log('\nüéâ Tous les tests ont r√©ussi !');
    console.log('üîó Votre application Vercel avec les 500 m√©dicaments est pr√™te :');
    console.log(`   ${VERCEL_URL}`);
    console.log('\nüìã Endpoints disponibles:');
    console.log(`   ‚Ä¢ ${VERCEL_URL}/api/medications`);
    console.log(`   ‚Ä¢ ${VERCEL_URL}/api/medications?search=nom`);
    console.log(`   ‚Ä¢ ${VERCEL_URL}/api/medications?inStock=true`);
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors des tests:', error.message);
    console.log('\nüîß V√©rifications √† effectuer:');
    console.log('  1. L\'URL Vercel est-elle correcte ?');
    console.log('  2. Les variables d\'environnement sont-elles configur√©es ?');
    console.log('  3. La base de donn√©es PostgreSQL est-elle accessible ?');
  }
}

testVercelMedications();